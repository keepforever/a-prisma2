### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Comment {
  author: User
  content: String
  deck: Deck
  id: ID!
}

type Deck {
  author: User
  comments(after: String, before: String, first: Int, last: Int, skip: Int): [Comment!]
  id: ID!
  list: String
  title: String
}

type Mutation {
  login(email: String, password: String): AuthPayload!
  signup(email: String, isGood: Boolean, name: String, password: String): AuthPayload!
}

type Query {
  feedUsers: [User!]!
  me: User!
  overComplexMe: User!
  singleDeck(id: ID): Deck
}

type User {
  arenaHandle: String
  decks(after: String, before: String, first: Int, last: Int, skip: Int): [Deck!]
  email: String!
  id: ID!
  isAdmin: Boolean!
  name: String
  password: String!
}
