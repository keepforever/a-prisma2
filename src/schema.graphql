### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Comment {
  author: User
  content: String
  deck: Deck
  id: ID!
}

type Deck {
  altCard: String
  altList: String
  author: User
  comments(after: String, before: String, first: Int, last: Int, skip: Int): [Comment!]
  id: ID!
  list: String
  sideBoardList: String
  title: String
}

type Mutation {
  createDeck(list: String, sideBoardList: String, title: String): Deck!
  deckAltCard(altCard: String, id: ID): Deck!
  deckAltList(altList: String, id: ID): Deck!
  login(email: String, password: String): AuthPayload!
  refreshToken(list: String, title: String, token: String): RefreshToken!
  signup(arenaHandle: String, email: String, isAdmin: Boolean, name: String, password: String): AuthPayload!
}

type Query {
  feedDecks: [Deck!]!
  feedUsers: [User!]!
  me: User!
  overComplexMe: User!
  singleDeck(id: ID): Deck
}

type RefreshToken {
  token: String!
  userId: String!
}

type User {
  arenaHandle: String
  decks(after: String, before: String, first: Int, last: Int, skip: Int): [Deck!]
  email: String!
  id: ID!
  isAdmin: Boolean!
  name: String
  password: String!
}
